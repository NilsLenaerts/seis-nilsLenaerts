<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on SEIS-Blog</title><link>https://nilslenaerts.github.io/seis-nilslenaerts/post/</link><description>Recent content in Posts on SEIS-Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate><atom:link href="https://nilslenaerts.github.io/seis-nilslenaerts/post/index.xml" rel="self" type="application/rss+xml"/><item><title>The WebAssembly compiler: WAT?</title><link>https://nilslenaerts.github.io/seis-nilslenaerts/post/compiler/</link><pubDate>Thu, 18 Aug 2022 15:13:10 +0200</pubDate><guid>https://nilslenaerts.github.io/seis-nilslenaerts/post/compiler/</guid><description>To be able to run WebAssebly we first have to compile the WebAssembly text file to a WebAssembly binary. To be able to do this we will be writing our own basic compiler from scratch which will translate WebAssembly WAT files to WASM files.
this will be done in three distinct steps
Lexing Parsing Compiling The Lexer: nearly all programming languages are made up of different words and symbols to make a complex program but how does a compiler know what is a class identifier or a string or a comment that is the job of the lexer.</description></item></channel></rss>